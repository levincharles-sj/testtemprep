name: Parallel API Testing with CSV Splitting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  JAVA_VERSION: '11'
  MAVEN_OPTS: '-Xmx1024m'
  NUMBER_OF_SPLITS: 10  # Configure the number of parallel jobs here

jobs:
  split-csv-file:
    name: Split CSV File
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      splits: ${{ steps.split-files.outputs.splits }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile Java splitter
      run: mvn compile -q
      
    - name: Create split directory
      run: mkdir -p Reports/split-files
      
    - name: Split CSV file
      id: split-files
      run: |
        output=$(java -cp target/classes com.test.utils.CsvFileSplitter \
          src/test/resources/test-data.csv \
          Reports/split-files/ \
          ${{ env.NUMBER_OF_SPLITS }})
        
        echo "$output"
        
        # Extract the actual number of splits from the output
        actual_splits=$(echo "$output" | grep "ACTUAL_SPLITS=" | cut -d'=' -f2)
        echo "splits=$actual_splits" >> $GITHUB_OUTPUT
        echo "Actual splits created: $actual_splits"
        
    - name: Create dynamic matrix
      id: set-matrix
      run: |
        splits="${{ steps.split-files.outputs.splits }}"
        matrix=$(seq 1 $splits | jq -R . | jq -s .)
        echo "matrix=$matrix" >> $GITHUB_OUTPUT
        echo "Generated matrix: $matrix"
      
    - name: Show configuration
      run: |
        echo "Number of splits configured: ${{ env.NUMBER_OF_SPLITS }}"
        echo "Actual splits created: ${{ steps.split-files.outputs.splits }}"
        echo "Matrix for parallel jobs: ${{ steps.set-matrix.outputs.matrix }}"
        
    - name: List split files
      run: |
        echo "Split files created:"
        ls -la Reports/split-files/
        echo "Total files: $(ls -1 Reports/split-files/*.csv 2>/dev/null | wc -l)"
        
    - name: Upload split files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: split-csv-files
        path: Reports/split-files/
        retention-days: 1

  parallel-api-tests:
    name: API Tests (Part ${{ matrix.part }})
    runs-on: ubuntu-latest
    needs: split-csv-file
    strategy:
      fail-fast: false  # Continue other jobs even if one fails
      matrix:
        part: ${{ fromJSON(needs.split-csv-file.outputs.matrix) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Download split CSV files
      uses: actions/download-artifact@v4
      with:
        name: split-csv-files
        path: split-files/
        
    - name: Verify downloaded files
      run: |
        echo "Downloaded files:"
        ls -la split-files/
        echo "File for this job (part ${{ matrix.part }}):"
        ls -la split-files/*_part_$(printf "%02d" ${{ matrix.part }}).csv || echo "File not found"
        
    - name: Run API tests for part ${{ matrix.part }}
      run: |
        # Set the CSV file path for this specific part
        CSV_FILE_PATH="split-files/test-data_part_$(printf "%02d" ${{ matrix.part }}).csv"
        
        # Check if file exists
        if [ ! -f "$CSV_FILE_PATH" ]; then
          echo "CSV file $CSV_FILE_PATH not found, skipping tests"
          exit 0
        fi
        
        # Run tests with the specific CSV file
        mvn test \
          -Dtest.csv.file="$CSV_FILE_PATH" \
          -Dtest.part.number=${{ matrix.part }} \
          -Dmaven.test.failure.ignore=false
      env:
        # Add any environment variables your tests need
        API_BASE_URL: ${{ secrets.API_BASE_URL || 'https://your-api-endpoint.com' }}
        API_KEY: ${{ secrets.API_KEY }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if tests fail
      with:
        name: test-results-part-${{ matrix.part }}
        path: |
          target/surefire-reports/
          target/failsafe-reports/
        retention-days: 7

  consolidate-results:
    name: Consolidate Test Results
    runs-on: ubuntu-latest
    needs: parallel-api-tests
    if: always()  # Run even if some tests failed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        pattern: test-results-part-*
        path: all-test-results/
        merge-multiple: true
        
    - name: List all results
      run: |
        echo "All test results:"
        find all-test-results/ -name "*.xml" -o -name "*.html" | head -20
        
    - name: Generate consolidated report (optional)
      run: |
        echo "Test execution completed for ${{ needs.split-csv-file.outputs.splits }} parts"
        echo "Configured splits: ${{ env.NUMBER_OF_SPLITS }}"
        echo "Actual splits processed: ${{ needs.split-csv-file.outputs.splits }}"
        echo "Results are available in individual artifacts"
        
        # Count total test files
        TEST_FILES=$(find all-test-results/ -name "TEST-*.xml" | wc -l)
        echo "Total test result files: $TEST_FILES"
        
    - name: Upload consolidated results
      uses: actions/upload-artifact@v4
      with:
        name: all-test-results-consolidated
        path: all-test-results/
        retention-days: 30